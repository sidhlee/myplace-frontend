{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","shared/util/validators.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/components/FormElements/ImageUpload.js","places/pages/NewPlace.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperty","obj","value","configurable","writable","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","validators","isValid","o","Symbol","iterator","Array","isArray","unsupportedIterableToArray","F","s","n","done","e","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","validator","trim","test","inputReducer","state","action","isTouched","Input","props","useReducer","initialValue","initialIsValid","inputState","dispatch","id","inputChangeCallback","useEffect","handleChange","handleBlur","element","placeholder","onChange","onBlur","rows","className","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","FormIsValid","ImageUpload","useState","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","pickedFile","fileIsValid","files","onInput","center","src","alt","onClick","current","click","NewPlace","auth","useContext","AuthContext","history","useHistory","useHttpClient","isLoading","error","sendRequest","clearError","title","description","address","image","handlePlaceSubmit","a","preventDefault","formData","FormData","append","process","Authorization","token","console","log","Fragment","onClear","onSubmit","asOverlay","disabled"],"mappings":"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","file":"static/js/3.9a93eb71.chunk.js","sourcesContent":["import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","// constants\nconst VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MAXLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value); // \\S : non-space\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React, { useReducer, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators),\n      };\n    case 'TOUCH':\n      return {\n        ...state,\n        isTouched: true,\n      };\n    default:\n      return state;\n  }\n};\n\n/**\n * @param {{id:string, element: string, type?:string label:string, inputChangeCallback: function, errorText:string, validators?: Array, placeholder?: string, rows?:number}} props\n */\nconst Input = (props) => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '', // initialize value if provided. If not, default to ''\n    isValid: props.initialIsValid || false,\n    isTouched: false,\n  });\n\n  // destructure props to pass specific prop to dep list\n  const { id, inputChangeCallback } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    inputChangeCallback(id, value, isValid);\n\n    // if we pass props here, this might cause infinite loop & render too often\n  }, [id, inputChangeCallback, value, isValid]);\n\n  const handleChange = (e) => {\n    dispatch({\n      type: 'CHANGE',\n      val: e.target.value,\n      validators: props.validators,\n    });\n  };\n  // only give warning when the input is blurred\n  // (not throwing error while user is typing)\n  const handleBlur = () => {\n    dispatch({ type: 'TOUCH' });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        value={inputState.value}\n      /> // fallback to 3\n    );\n\n  return (\n    <div\n      className={`form-control ${\n        !inputState.isValid && inputState.isTouched && 'form-control--invalid'\n      }`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\n// Input takes id as required prop to reuse same change handler which will send back\n// the id , value and the validity of the input to update the form state in parent component\n//\n// Without id, it will be hard to know which Input component called the change handler\n\nInput.propTypes = {\n  id: PropTypes.string.isRequired,\n  element: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  inputChangeCallback: PropTypes.func.isRequired,\n  errorText: PropTypes.string.isRequired,\n  validators: PropTypes.arrayOf(\n    PropTypes.shape({\n      type: PropTypes.string.isRequired,\n    })\n  ),\n  placeholder: PropTypes.string,\n  rows: PropTypes.number,\n};\n\nexport default Input;\n","import { useCallback, useReducer } from 'react';\n\n// when any of input is changed, re-evaluate the validity of the entire form\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      // for each input object in inputs object\n      for (const inputId in state.inputs) {\n        // if the given input is nullish (undefined), skip it\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        // if input's id matches dispatched action's id\n        if (inputId === action.inputId) {\n          // form becomes invalid if action.isValid is false\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          // if inputId doesn't match action.inputId,\n          // recalculate form's validity based on current state of the input\n          // TODO: why do we need this check?\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid },\n        },\n        isValid: formIsValid,\n      };\n    case 'SET_DATA':\n      return {\n        // overwrite existing state\n        // so no spreading\n        inputs: action.inputs,\n        isValid: action.formIsValid,\n      };\n    default:\n      return state;\n  }\n};\n\n/**\n *\n * @param {Object} initialInputs initial structure and values of the input\n * @param {boolean} initialFormValidity\n * @returns {Array} [ formState, inputChangeCallback, setFormDataCallback ]\n */\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity,\n  });\n\n  // without useCallback, this function is created every time NewPlace is rendered\n  // then passed to Input component which will cause it to call this function in effect hook.\n  //\n  // this callback can be passed to different child components because it receives\n  // component id as argument\n  const inputChangeCallback = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      inputId: id,\n      value,\n      isValid,\n    });\n  }, []); // re-use this function when NewPlace re-renders\n\n  /**\n   * sets form data (for initial value)\n   */\n  const setFormDataCallback = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      FormIsValid: formValidity,\n    });\n  }, []);\n\n  return [formState, inputChangeCallback, setFormDataCallback];\n};\n","import React, { useRef, useState, useEffect } from 'react';\n\nimport Button from './Button';\nimport './ImageUpload.css';\n\nconst ImageUpload = (props) => {\n  const [file, setFile] = useState(); // store binary file data\n  const [previewUrl, setPreviewUrl] = useState(); // store url to parsed data\n  const [isValid, setIsValid] = useState(false); // file validity\n\n  const filePickerRef = useRef();\n\n  // generates a preview\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    // Browser API\n    const fileReader = new FileReader();\n    // FileReader does not support Promise\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result); // parsed result is available at .result\n    };\n    // In order to render image, you need to pass the url to the data\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickedHandler = (e) => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    // only handle when user picked one file\n    if (e.target.files && e.target.files.length === 1) {\n      // extract picked file available at e.target.files\n      pickedFile = e.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true); // will be set to true in the next render\n      fileIsValid = true; // set manually\n    } else {\n      // if user picked no file or more than 1 file\n      setIsValid(false); // will be set to false in the next render\n      fileIsValid = true;\n    }\n    // send up the picked file and validity to consume in the parent & other components\n    // send the manually-set validity to reflect the changes in this render (,not the state from next render)\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    // click on the hidden file input to open up the file picker\n    filePickerRef.current.click();\n  };\n\n  return (\n    <div className=\"form-control\">\n      {/* Hide default file picker by default */}\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: 'none' }}\n        type=\"file\"\n        accept=\".jpb,.png,.jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && 'center'}`}>\n        <div className=\"image-upload__preview\">\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {!previewUrl && <p>Please pick an image</p>}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>\n          PICK IMAGE\n        </Button>\n      </div>\n      {!isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH,\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './PlaceForm.css';\n\nconst NewPlace = () => {\n  const auth = useContext(AuthContext);\n  const history = useHistory();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [formState, inputChangeCallback] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false,\n      },\n      description: {\n        value: '',\n        isValid: false,\n      },\n      address: {\n        value: '',\n        isValid: false,\n      },\n      image: {\n        value: null,\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const handlePlaceSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const formData = new FormData();\n      formData.append('title', formState.inputs.title.value);\n      formData.append('description', formState.inputs.description.value);\n      formData.append('address', formState.inputs.address.value);\n      // We no longer need to send userId with formData\n      // because we are extracting it from the token\n      // formData.append('creator', auth.userId);\n      formData.append('image', formState.inputs.image.value);\n\n      // The server expects the following data\n      // const { title, description, address, creator } = req.body;\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/places`,\n        'POST',\n        formData,\n        { Authorization: `Bearer ${auth.token}` } // header\n      );\n      // A new place is created in the backend with transaction.\n      // In transaction, the collection must exist before you create a document in it.\n\n      // redirect user upon success\n      history.push('/');\n\n      // Redirect the user to a different page\n    } catch (err) {}\n    console.log(formState.inputs); // send this to the backend!\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <form className=\"place-form\" onSubmit={handlePlaceSubmit}>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <Input\n          id=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid title\"\n          inputChangeCallback={inputChangeCallback}\n        />\n        <Input\n          id=\"description\"\n          element=\"textarea\"\n          type=\"text\"\n          label=\"Description\"\n          validators={[VALIDATOR_MINLENGTH(5)]} // this is superset of require\n          errorText=\"Please enter a valid description at least 5 characters\"\n          inputChangeCallback={inputChangeCallback}\n        />\n        <Input\n          id=\"address\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Address\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid address\"\n          inputChangeCallback={inputChangeCallback}\n        />\n        <ImageUpload\n          id=\"image\"\n          onInput={inputChangeCallback}\n          errorText=\"Please provide an image\"\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          ADD PLACE\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewPlace;\n"],"sourceRoot":""}